definitions:
  controller.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      messages:
        items:
          type: string
        type: array
    type: object
  dto.CustomerResponse:
    properties:
      code:
        type: string
      customer:
        $ref: '#/definitions/models.Customer'
      message:
        type: string
      messages:
        items:
          type: string
        type: array
    type: object
  dto.CustomersResponse:
    properties:
      code:
        type: string
      customers:
        items:
          $ref: '#/definitions/models.Customer'
        type: array
      message:
        type: string
      messages:
        items:
          type: string
        type: array
      total:
        type: integer
    type: object
  httpresponse.Response:
    properties:
      code:
        type: string
      message:
        type: string
      messages:
        items:
          type: string
        type: array
    type: object
  models.Customer:
    properties:
      address:
        type: string
      city:
        type: string
      company:
        type: string
      county:
        type: string
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
      postal:
        type: string
      updatedAt:
        type: string
      web:
        type: string
    type: object
info:
  contact: {}
paths:
  /customers:
    get:
      consumes:
      - application/json
      description: Retrieve a list of customers from the database or cache
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: List all customers
      tags:
      - customers
  /customers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a customer by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Delete a customer
      tags:
      - customers
    put:
      consumes:
      - application/json
      description: Update customer details by ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer details to update
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: Update a customer
      tags:
      - customers
  /customers/cache:
    get:
      consumes:
      - application/json
      description: Retrieve all customers from the cache
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CustomersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Get all cached customers
      tags:
      - customers
  /customers/upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload and parse an Excel file to create multiple customer records
      parameters:
      - description: Excel file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpresponse.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpresponse.Response'
      summary: Upload customers from an Excel file
      tags:
      - customers
swagger: "2.0"
